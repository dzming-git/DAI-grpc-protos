syntax = "proto3";

package serviceCoordinator;

service Communicate {
    rpc informPreviousServiceInfo(InformPreviousServiceInfoRequest) returns (InformPreviousServiceInfoResponse) {}
    rpc informCurrentServiceInfo(InformCurrentServiceInfoRequest) returns (InformCurrentServiceInfoResponse) {}
    rpc start(StartRequest) returns (StartResponse) {}
    rpc stop(StopRequest) returns (StopResponse) {}
}

message NullRequest {}
message NullResponse {}

// 每次通信的状态
message CustomResponse {
  int32 code = 1;
  string message = 2;
}

// KV格式参数
message Argument {
    string key = 1;
    string value = 2;
}

message InformPreviousServiceInfoRequest {
    int64 taskId = 1;
    string preServiceName = 2;
    string preServiceIp = 3;
    string preServicePort = 4;
    repeated Argument args = 5;
}

message InformPreviousServiceInfoResponse {
    CustomResponse response = 1;
}

message InformCurrentServiceInfoRequest {
    int64 taskId = 1;
    repeated Argument args = 2;
}

message InformCurrentServiceInfoResponse {
    CustomResponse response = 1;
    repeated Argument args = 2;
}

message StartRequest {
    int64 taskId = 1;
}

message StartResponse {
    CustomResponse response = 1;
}

message StopRequest {
    int64 taskId = 1;
}

message StopResponse {
    CustomResponse response = 1;
}
